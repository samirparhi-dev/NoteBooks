# Step 1: Install Required Libraries
!pip install requests toml --quiet

# Step 2: Import Required Libraries
import requests
import toml
from google.colab import files

# Step 3: Function to Get GitHub Token
def get_github_token():
    print("Enter your GitHub Personal Access Token:")
    return input()

# Step 4: Fetch Repositories
def fetch_repositories(token):
    url = "https://api.github.com/search/repositories"
    query = "language:rust+is:public+has:tag"
    params = {"q": query, "sort": "stars", "order": "desc", "per_page": 50}
    
    headers = {
        "Authorization": f"token {token}",
        "Accept": "application/vnd.github.v3+json"
    }
    
    response = requests.get(url, headers=headers, params=params)
    response.raise_for_status()
    return response.json()["items"]

# Step 5: Fetch Language Breakdown
def fetch_language_percentage(repo_url, token):
    headers = {
        "Authorization": f"token {token}",
        "Accept": "application/vnd.github.v3+json"
    }
    response = requests.get(f"{repo_url}/languages", headers=headers)
    response.raise_for_status()
    data = response.json()
    rust_code = data.get("Rust", 0)
    total_code = sum(data.values())
    return (rust_code / total_code) * 100 if total_code > 0 else 0

# Step 6: Fetch Last Commit Date
def fetch_last_commit_date(repo_url, token):
    headers = {
        "Authorization": f"token {token}",
        "Accept": "application/vnd.github.v3+json"
    }
    commits_url = f"{repo_url}/commits"
    response = requests.get(commits_url, headers=headers)
    response.raise_for_status()
    commits = response.json()
    if commits:
        return commits[0]["commit"]["committer"]["date"]
    return "N/A"

# Step 7: Generate the TOML File
def generate_toml_file(token):
    repos = fetch_repositories(token)
    repo_metadata = []
    
    for repo in repos:
        name = repo["name"]
        url = repo["html_url"]
        avatar_url = repo["owner"]["avatar_url"]
        languages_url = repo["url"]
        rust_percentage = fetch_language_percentage(languages_url, token)
        
        if rust_percentage > 60:  # Filter based on Rust language percentage
            last_updated = fetch_last_commit_date(repo["url"], token)
            repo_metadata.append({
                "name": name,
                "url": url,
                "rustLangPercentage": f"{rust_percentage:.2f}%",
                "lastUpdated": last_updated,
                "gitHubAvtarURL": avatar_url
            })
    
    # Save to TOML file
    config = {"awsome_repo_metadata": repo_metadata}
    toml_filename = "awsome-rust-repo-config.toml"
    with open(toml_filename, "w") as toml_file:
        toml.dump(config, toml_file)

    print(f"TOML file '{toml_filename}' generated successfully!")
    # Allow download of the file
    files.download(toml_filename)

# Step 8: Run the Script
token = get_github_token()
generate_toml_file(token)
